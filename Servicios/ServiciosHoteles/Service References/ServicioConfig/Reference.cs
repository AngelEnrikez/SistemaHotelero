//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34014
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiciosHoteles.ServicioConfig {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Parametro", Namespace="http://schemas.datacontract.org/2004/07/ServiciosHoteles.Dominio")]
    [System.SerializableAttribute()]
    public partial class Parametro : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaveConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdConfiguracionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValorConfigField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaveConfig {
            get {
                return this.ClaveConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaveConfigField, value) != true)) {
                    this.ClaveConfigField = value;
                    this.RaisePropertyChanged("ClaveConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdConfiguracion {
            get {
                return this.IdConfiguracionField;
            }
            set {
                if ((this.IdConfiguracionField.Equals(value) != true)) {
                    this.IdConfiguracionField = value;
                    this.RaisePropertyChanged("IdConfiguracion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValorConfig {
            get {
                return this.ValorConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.ValorConfigField, value) != true)) {
                    this.ValorConfigField = value;
                    this.RaisePropertyChanged("ValorConfig");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioConfig.IParametrosConf")]
    public interface IParametrosConf {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParametrosConf/ModificarParametro", ReplyAction="http://tempuri.org/IParametrosConf/ModificarParametroResponse")]
        ServiciosHoteles.ServicioConfig.Parametro ModificarParametro(ServiciosHoteles.ServicioConfig.Parametro parametroAModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParametrosConf/ModificarParametro", ReplyAction="http://tempuri.org/IParametrosConf/ModificarParametroResponse")]
        System.Threading.Tasks.Task<ServiciosHoteles.ServicioConfig.Parametro> ModificarParametroAsync(ServiciosHoteles.ServicioConfig.Parametro parametroAModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParametrosConf/ObtenerParametro", ReplyAction="http://tempuri.org/IParametrosConf/ObtenerParametroResponse")]
        ServiciosHoteles.ServicioConfig.Parametro ObtenerParametro(int idParametro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParametrosConf/ObtenerParametro", ReplyAction="http://tempuri.org/IParametrosConf/ObtenerParametroResponse")]
        System.Threading.Tasks.Task<ServiciosHoteles.ServicioConfig.Parametro> ObtenerParametroAsync(int idParametro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParametrosConf/ListarParametros", ReplyAction="http://tempuri.org/IParametrosConf/ListarParametrosResponse")]
        ServiciosHoteles.ServicioConfig.Parametro[] ListarParametros();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParametrosConf/ListarParametros", ReplyAction="http://tempuri.org/IParametrosConf/ListarParametrosResponse")]
        System.Threading.Tasks.Task<ServiciosHoteles.ServicioConfig.Parametro[]> ListarParametrosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IParametrosConfChannel : ServiciosHoteles.ServicioConfig.IParametrosConf, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParametrosConfClient : System.ServiceModel.ClientBase<ServiciosHoteles.ServicioConfig.IParametrosConf>, ServiciosHoteles.ServicioConfig.IParametrosConf {
        
        public ParametrosConfClient() {
        }
        
        public ParametrosConfClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ParametrosConfClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ParametrosConfClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ParametrosConfClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServiciosHoteles.ServicioConfig.Parametro ModificarParametro(ServiciosHoteles.ServicioConfig.Parametro parametroAModificar) {
            return base.Channel.ModificarParametro(parametroAModificar);
        }
        
        public System.Threading.Tasks.Task<ServiciosHoteles.ServicioConfig.Parametro> ModificarParametroAsync(ServiciosHoteles.ServicioConfig.Parametro parametroAModificar) {
            return base.Channel.ModificarParametroAsync(parametroAModificar);
        }
        
        public ServiciosHoteles.ServicioConfig.Parametro ObtenerParametro(int idParametro) {
            return base.Channel.ObtenerParametro(idParametro);
        }
        
        public System.Threading.Tasks.Task<ServiciosHoteles.ServicioConfig.Parametro> ObtenerParametroAsync(int idParametro) {
            return base.Channel.ObtenerParametroAsync(idParametro);
        }
        
        public ServiciosHoteles.ServicioConfig.Parametro[] ListarParametros() {
            return base.Channel.ListarParametros();
        }
        
        public System.Threading.Tasks.Task<ServiciosHoteles.ServicioConfig.Parametro[]> ListarParametrosAsync() {
            return base.Channel.ListarParametrosAsync();
        }
    }
}
